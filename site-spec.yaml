openapi: 3.0.3
info:
  title: GOOVE
  version: "1.0"
  description: GOOVE API Design Spec
servers:
  - url: "http://localhost:8080"
  - url: "http://api.goove.id"
paths:
  /auth/google:
    post:
      description: Make google login
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SocialLoginReq"
      responses:
        "200":
          description: "Login Succes"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /auth/logout:
    post:
      description: Logout
      tags:
        - auth
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Logout Succes"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /user/pending:
    get:
      description: Response to user pending
      tags:
        - user
      security:
        - Token: ["userApprove"]
        - Refresh: []
      responses:
        "200":
          description: "Get Pending Team"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MyTeamModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
    post:
      description: Acc user pending
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApproveUser"
      tags:
        - user
      security:
        - Token: ["userApprove"]
        - Refresh: []
      responses:
        "200":
          description: "Approve Succes"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /team:
    get:
      description: Get MY Team
      tags:
        - team
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return my team"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyTeamModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
    delete:
      description: Delete team member
      tags:
        - team
      parameters:
        - $ref: "#/components/parameters/id"
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return my team"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyTeamModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /team/member:
    get:
      description: Get Team Member
      tags:
        - team
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return my team member"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /team/membership:
    get:
      description: Get My Membership
      tags:
        - team
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return my team membership"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /team/invite:
    get:
      description: Get Invitation of team
      tags:
        - team
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return team invitation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamInvitation"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
    post:
      description: Invite a member
      tags:
        - team
      security:
        - Token: []
        - Refresh: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamInvitationRequest"
      responses:
        "200":
          description: "Invite Succes"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
    delete:
      description: Cancel Invitation
      tags:
        - team
      parameters:
        - name: member_email
          in: query
          description: Identifier or the object
          schema:
            type: string
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Delete Succes"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /team/role:
    post:
      description: Set Role of team
      tags:
        - team
      security:
        - Token: []
        - Refresh: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamInvitationRequest"
      responses:
        "200":
          description: "Invite Succes"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /team/invitation:
    get:
      description: Get Invitation to me
      tags:
        - team
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return invitation to me"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamInvitation"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
    post:
      description: Response to invitation
      tags:
        - team
      security:
        - Token: []
        - Refresh: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamInvitatioUserResponse"
      responses:
        "200":
          description: "Invite Succes"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /team/switch:
    get:
      description: Switch team
      parameters:
        - $ref: "#/components/parameters/id"
      tags:
        - team
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Succes
          headers:
            cookie-token:
              schema:
                type: string
              description: Cookie token for Auth user (Http-only)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /team/leave:
    delete:
      description: Leave from team
      tags:
        - team
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Sukses
          headers:
            cookie-token:
              schema:
                type: string
              description: Cookie token for Auth user (Http-only)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /key:
    get:
      description: Get Team Key
      tags:
        - keys
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return team key"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Keys"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
    post:
      description: Add new key
      tags:
        - keys
      security:
        - Token: []
        - Refresh: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyRequest"
      responses:
        "200":
          description: "Add Succes"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
    delete:
      description: Delete Key
      tags:
        - keys
      parameters:
        - $ref: "#/components/parameters/id"
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Delete Succes"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /requests:
    get:
      description: Get Team Request
      tags:
        - requests
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return team lastest otp"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OTPModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /requests/stat:
    get:
      description: Get Team Request Stat
      tags:
        - requests
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return team lastest otp"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestStat"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /otp/status:
    get:
      description: "get status of otp"
      tags:
        - otp
      parameters:
        - $ref: "#/components/parameters/id"
      security:
        - ApiKey: ["statusotp"]
      responses:
        "200":
          description: "Succes get status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /otp/make:
    post:
      description: "make new otp"
      tags:
        - otp
      security:
        - ApiKey: ["makeotp"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OTPRequest"
      responses:
        "200":
          description: "Succes make otp"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPResponse"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /otp/validate:
    post:
      description: "validate otp"
      tags:
        - otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateRequest"
      security:
        - ApiKey: ["validateotp"]
      responses:
        "200":
          description: "Succes validate"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /otp/make/public:
    post:
      description: "make new public otp"
      tags:
        - otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OTPRequest"
      responses:
        "200":
          description: "Succes make otp"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPResponse"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /otp/validate/public:
    post:
      description: "validate otp"
      tags:
        - otp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateRequest"

      responses:
        "200":
          description: "Succes validate"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /otp/status/public:
    get:
      description: "get status of otp"
      tags:
        - otp
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "Succes get status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OTPModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /billing:
    get:
      description: Get my billing
      tags:
        - billing
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return my billing"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyBilling"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /billing/charge/history:
    get:
      description: Get my billing
      tags:
        - billing
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return my billing charge history"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChargeHistory"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /billing/deposit/history:
    get:
      description: Get deposit history
      tags:
        - billing
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return my billing charge history"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DepositModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"    
  /billing/deposit/recharge:
    post:
      description: Recharge billing
      tags:
        - billing
      security:
        - Token: []
        - Refresh: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepositRequest"  
      responses:
        "200":
          description: "Return my billing charge history"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositResponse"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"             
  /callback:
    get:
      description: Get team callback
      tags:
        - callback
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return team callback"
          content:
            application/json:
                schema:
                  $ref: "#/components/schemas/CallbackModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
    post:
      description: Set Team callback
      tags:
        - callback
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallbackModel"
      responses:
        "200":
          description: "Succes set callback"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallbackModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError" 
  /methods:
    get:
      description: Get all available method
      tags:
        - system
      responses:
        "200":
          description: "Return all method"
          content:
            application/json:
                schema:
                  $ref: "#/components/schemas/OTPMethods"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"  
  /pricing:
    get:
      description: Get pricing
      tags:
        - system
      responses:
        "200":
          description: "Return pricing"
          content:
            application/json:
                schema:
                  $ref: "#/components/schemas/Pricing"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError" 
  /usage:
    post:
      description: Create Usage Report
      tags:
        - usage_report
      responses:
        "200":
          description: "Succesfully Create Usage"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"  
    get:
      description: Get usage report
      tags:
        - usage_report
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return usage report"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsageModel"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"
  /usage/download:
    get:
      description: Download Usage
      tags:
        - usage_report
      parameters:
        - $ref: "#/components/parameters/id"
      security:
        - Token: []
        - Refresh: []
      responses:
        "200":
          description: "Return usage report"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadUsage"
        "400":
          $ref: "#/components/responses/ErrorOrRequestMalfunction"
        "500":
          $ref: "#/components/responses/ServerError"                                           
components:
  schemas:
    DownloadUsage:
      type: object
      properties:
        url:
          type: string  
    UsageModel:
      type: object
      properties:
        usage_id:
          type: string  
        usage_name:
          type: string     
        status:
          type: string
        csv_relative_path:
          type: string 
        generated_at:
          type: string
          format: date-time   
        initiate_at:
          type: string
          format: date-time    
        from:
          type: string
          format: date-time 
        untill:
          type: string
          format: date-time   
    DepositModel:
      type: object
      properties:
        request_amount:
          type: integer
        amount:
          type: integer
        tax:
          type: integer  
        deposit_id:
          type: string     
        status:
          type: string
        midtrans_token:
          type: string  
        created_at:
          type: string
          format: date-time
    DepositResponse:
      type: object
      properties:
        token:
          type: string
    DepositRequest:
      type: object
      properties:
        request_amount:
          type: integer
    Pricing:
      type: object
      properties:
        whatsapp_indirect:
            $ref: "#/components/schemas/PricingModel"
        telegram:
            $ref: "#/components/schemas/PricingModel"     
    PricingModel:
      type: object
      properties:
        product_name:
          type: string
        pricing_label:
          type: string
        unit:
          type: string
        currency:
          type: string     
        value:
          type: number 
    OTPMethods:
      type: object
      properties:
        methods:
          type: array
          items:
            $ref: "#/components/schemas/OTPMethod"
    OTPMethod:
      type: object
      properties:
        label:
          type: string
        id:
          type: string
        available:
          type: boolean        
    ChargeHistory:
      type: object
      properties:
        total_sent:
          type: integer
        chargeID:
          type: string
        total_amount:
          type: number
        detail:
          type: array
          items:
            $ref: "#/components/schemas/BillingDetail"
        till:
          type: string
          format: date-time
        from:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    MyBilling:
      type: object
      properties:
        credit:
          type: number
        deposit_total:
          type: number
        expense_total:
          type: number
        expense_detail:
          type: array
          items:
            $ref: "#/components/schemas/BillingDetail"
        last_update:
          type: string
          format: date-time
    BillingDetail:
      type: object
      properties:
        sent_total:
          type: integer
        method:
          type: string
        total:
          type: number
        price:
          type: number
    RequestStat:
      type: object
      properties:
        lastest:
          $ref: "#/components/schemas/RequestTotal"
        daily_request:
          $ref: "#/components/schemas/RequestTotal"
        monthly_request:
          $ref: "#/components/schemas/RequestTotal"
        total_request:
          $ref: "#/components/schemas/RequestTotal"
        last_update:
          type: string
          format: date-time
    RequestTotal:
      type: object
      properties:
        detail:
          type: array
          items:
            $ref: "#/components/schemas/RequestDetail"
        total:
          type: integer
        sent:
          type: integer
        validated:
          type: integer
    RequestDetail:
      type: object
      properties:
        method:
          type: string
        total:
          type: integer
        sent:
          type: integer
        validated:
          type: integer
    KeyRequest:
      type: object
      properties:
        name:
          type: string
        capabilities:
          type: array
          items:
            type: string
    Keys:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        key:
          type: string
        key_view:
          type: string
        capabilities:
          type: array
          items:
            type: string
    TeamInvitatioUserResponse:
      type: object
      properties:
        id:
          type: string
        response:
          type: boolean
    TeamInvitation:
      type: object
      properties:
        teamID:
          type: string
        member_id:
          type: string
        invitationID:
          type: string
        invitationAt:
          type: string
          format: date-time
        status:
          type: string
        member:
          $ref: "#/components/schemas/TeamMember"
    TeamInvitationRequest:
      type: object
      properties:
        member_email:
          type: string
        roles:
          type: array
          items:
            type: string
    TeamMember:
      type: object
      properties:
        joinAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string
        roleLabel:
          type: array
          items:
            type: string
        team:
          $ref: "#/components/schemas/TeamSnippet"
        user:
          $ref: "#/components/schemas/UserSnippet"
    MyTeamModel:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamSnippet"
        approved:
          type: boolean
    TeamSnippet:
      type: object
      properties:
        teamID:
          type: string
        name:
          type: string
        teamOwnerID:
          type: string
        avatarurl:
          type: string
        badge:
          type: string
    LoginResponse:
      type: object
      properties:
        userdata:
          $ref: "#/components/schemas/UserSnippet"
        token:
          type: string
        refresh:
          type: string
        teamID:
          type: string
        teamRoles:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
    UserSnippet:
      type: object
      properties:
        userID:
          type: string
          uniqueItems: true
        name:
          type: string
        email:
          type: string
        avatarurl:
          type: string
    ApproveUser:
      type: object
      properties:
        teamID:
          type: string
        acc:
          type: boolean
    SocialLoginReq:
      type: object
      properties:
        token:
          type: string
        appsource:
          type: string
    OTPRequest:
      type: object
      properties:
        phone:
          type: string
        otpType:
          type: string
        data:
          type: string
          nullable: true
          description: Consumer related custom data in base64 format 
          format: base64   
    ValidateRequest:
      type: object
      properties:
        id:
          type: string
        otp:
          type: string
    CallbackModel:
      type: object
      properties:
        otp_sent_callback:
          type: string
        otp_sent_error_callback:
          type: string   
        otp_validated_callback:
          type: string     
    OTPResponse:
      type: object
      properties:
        otpID:
          type: string
        redirectLink:
          type: string
        validUntil:
          type: string
          format: date-time
    OTPModel:
      type: object
      properties:
        otpID:
          type: string
        redirectLink:
          type: string
        phone_snippet:
          type: string
        method:
          type: string
        createdAt:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
        custom_data:
          type: string
          description: Consumer related custom data
          format: base64    
        otpValidated:
          $ref: "#/components/schemas/OtpValidated"
        sendStatus:
          $ref: "#/components/schemas/SendStatus"
        error:
          $ref: "#/components/schemas/OTPError"  
    SendStatus:
      type: object
      nullable: true
      properties:
        sendAt:
          type: string
          format: date-time
    OTPError:
      type: object
      nullable: true
      properties:
        createdAt:
          type: string
          format: date-time 
        cause:
          type: string
        explenation:
          type: string          
    OtpValidated:
      type: object
      nullable: true
      properties:
        otpValidated:
          type: boolean
        validatedDuration:
          type: integer
        otpValidatedAt:
          type: string
          format: date-time

  responses:
    ErrorOrRequestMalfunction:
      description: Request Malfunction missing argument, properties or invalid data
      content:
        text/plain:
          schema:
            type: string
    ServerError:
      description: Server Error
      content:
        text/plain:
          schema:
            type: string
  parameters:
    id:
      name: id
      in: query
      description: Identifier or the object
      schema:
        type: string
  securitySchemes:
    ApiKey: # arbitrary name for the security scheme
      type: apiKey
      in: header
      name: X-KEY

    Token:
      type: apiKey
      in: header
      name: token
    Refresh:
      type: apiKey
      in: header
      name: token
security:
  - ApiKey: ["makeotp", "statusotp", "validateotp"]
