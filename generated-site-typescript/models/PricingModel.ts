/* tslint:disable */
/* eslint-disable */
/**
 * MNCOTP
 * MNCOTP API Design Spec
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PricingModel
 */
export interface PricingModel {
    /**
     * 
     * @type {string}
     * @memberof PricingModel
     */
    productName?: string;
    /**
     * 
     * @type {string}
     * @memberof PricingModel
     */
    pricingLabel?: string;
    /**
     * 
     * @type {string}
     * @memberof PricingModel
     */
    unit?: string;
    /**
     * 
     * @type {string}
     * @memberof PricingModel
     */
    currency?: string;
    /**
     * 
     * @type {number}
     * @memberof PricingModel
     */
    value?: number;
}

export function PricingModelFromJSON(json: any): PricingModel {
    return PricingModelFromJSONTyped(json, false);
}

export function PricingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PricingModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productName': !exists(json, 'product_name') ? undefined : json['product_name'],
        'pricingLabel': !exists(json, 'pricing_label') ? undefined : json['pricing_label'],
        'unit': !exists(json, 'unit') ? undefined : json['unit'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function PricingModelToJSON(value?: PricingModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'product_name': value.productName,
        'pricing_label': value.pricingLabel,
        'unit': value.unit,
        'currency': value.currency,
        'value': value.value,
    };
}

